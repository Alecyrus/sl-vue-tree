{"version":3,"sources":["webpack://SlVueTree/webpack/universalModuleDefinition","webpack://SlVueTree/webpack/bootstrap","webpack://SlVueTree/./src/sl-vue-tree.js","webpack://SlVueTree/./src/sl-vue-tree.vue?75ef","webpack://SlVueTree/./src/sl-vue-tree.vue","webpack://SlVueTree/./node_modules/vue-loader/lib/runtime/component-normalizer.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","sl_vue_tree","props","type","Array","default","edgeSize","Number","showBranches","Boolean","level","parentInd","allowMultiselect","scrollAreaHeight","maxScrollSpeed","data","rootCursorPosition","scrollIntervalId","scrollSpeed","lastSelectedNode","mouseIsDown","isDragging","lastMousePos","x","y","mounted","this","isRoot","document","addEventListener","onDocumentMouseupHandler","beforeDestroy","removeEventListener","computed","cursorPosition","getParent","nodes","nodeModels","copy","getNodes","children","gaps","push","selectionSize","getSelected","length","methods","setCursorPosition","pos","parentPath","map","nodeModel","ind","nodePath","concat","getNode","path","siblings","slice","getNodeSiblings","title","isLeaf","isExpanded","isSelected","pathStr","JSON","stringify","isFirstChild","isLastChild","emitInput","newValue","getRoot","$emit","emitSelect","selectedNodes","event","emitDrop","targetNode","position","emitToggle","toggledNode","emitNodeDblclick","node","emitNodeContextmenu","emitNodeclick","onNodeClickHandler","clickedNode","defaultPrevented","select","addToSelection","ctrlKey","newNodes","shiftSelectionMode","shiftKey","shiftSelectionStarted","traverse","onNodeMousemoveHandler","destNode","initialDraggingState","clientX","clientY","isDragStarted","nodeHeight","currentTarget","offsetHeight","offsetY","placement","$root","$el","rootRect","getBoundingClientRect","$dragInfo","$refs","dragInfo","style","top","scrollTop","left","scrollBottomLine","bottom","scrollDownSpeed","scrollTopLine","scrollTopSpeed","startScroll","stopScroll","onNodeDropHandler","onNodeMousedownHandler","speed","setInterval","clearInterval","onNodeMouseupHandler","stopDrag","draggingNodes","draggingNode","checkNodeIsParent","nodeModelsToInsert","draggingNodeModel","destSiblings","destNodeModel","unshift","insertInd","splice","onToggleHandler","updateNode","stopPropagation","$parent","nodeToUpdate","patch","assign","cb","shouldStop","forEach","nodeInd","itemPath","sourceNode","destPath","entity","parse","render","_vm","_h","$createElement","_c","_self","staticClass","class","sl-vue-tree-root","_l","sl-vue-tree-selected","directives","rawName","expression","on","dragover","preventDefault","_v","sl-vue-tree-cursor-inside","sl-vue-tree-node-is-leaf","sl-vue-tree-node-is-folder","mousemove","drop","mousedown","mouseup","click","contextmenu","dblclick","dragleave","onDragleaveHandler","gapInd","_t","_e","_s","String","fromCharCode","attrs","scopedSlots","_u","key","fn","ref","_withStripped","sl_vue_tree_Component","scriptExports","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","options","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","normalizeComponent","__file","__webpack_exports__"],"mappings":"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","file":"sl-vue-tree.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SlVueTree\"] = factory();\n\telse\n\t\troot[\"SlVueTree\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\r\nexport default {\r\n  name: 'sl-vue-tree',\r\n  props: {\r\n    value: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    edgeSize: {\r\n      type: Number,\r\n      default: 3\r\n    },\r\n    showBranches: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    level: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    parentInd: {\r\n      type: Number\r\n    },\r\n    allowMultiselect: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    scrollAreaHeight: {\r\n      type: Number,\r\n      default: 70\r\n    },\r\n    maxScrollSpeed: {\r\n      type: Number,\r\n      default: 20\r\n    }\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      rootCursorPosition: null,\r\n      scrollIntervalId: 0,\r\n      scrollSpeed: 0,\r\n      lastSelectedNode: null,\r\n      mouseIsDown: false,\r\n      isDragging: false,\r\n      lastMousePos: {x: 0, y: 0}\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    if (this.isRoot) {\r\n      document.addEventListener('mouseup', this.onDocumentMouseupHandler);\r\n    }\r\n  },\r\n\r\n  beforeDestroy() {\r\n    document.removeEventListener('mouseup', this.onDocumentMouseupHandler);\r\n  },\r\n\r\n  computed: {\r\n    cursorPosition() {\r\n      if (this.isRoot) return this.rootCursorPosition;\r\n      return this.getParent().cursorPosition;\r\n    },\r\n\r\n    nodes() {\r\n      if (this.isRoot) {\r\n        const nodeModels = this.copy(this.value);\r\n        return this.getNodes(nodeModels);\r\n      }\r\n\r\n      return this.getParent().nodes[this.parentInd].children;\r\n    },\r\n    /**\r\n   * gaps is using for nodes indentation\r\n   * @returns {number[]}\r\n   */\r\n    gaps() {\r\n      const gaps = [];\r\n      let i = this.level - 1;\r\n      if (!this.showBranches) i++;\r\n      while (i-- > 0) gaps.push(i);\r\n      return gaps;\r\n    },\r\n\r\n    isRoot() {\r\n      return !this.level\r\n    },\r\n\r\n    selectionSize() {\r\n      return this.getSelected().length;\r\n    }\r\n  },\r\n  methods: {\r\n\r\n    setCursorPosition(pos) {\r\n      if (this.isRoot) {\r\n        this.rootCursorPosition = pos;\r\n        return;\r\n      }\r\n      this.getParent().setCursorPosition(pos);\r\n    },\r\n\r\n    getNodes(nodeModels, parentPath = []) {\r\n\r\n      return nodeModels.map((nodeModel, ind) => {\r\n        const nodePath = parentPath.concat(ind);\r\n        return this.getNode(nodePath, nodeModel, nodeModels);\r\n      })\r\n    },\r\n\r\n    getNode(\r\n      path,\r\n      nodeModel = null,\r\n      siblings = null\r\n    ) {\r\n      const ind = path.slice(-1)[0];\r\n      siblings = siblings || this.getNodeSiblings(this.value, path);\r\n      nodeModel = nodeModel || siblings[ind];\r\n\r\n      const node = {\r\n\r\n        // define the all ISlTreeNodeModel props\r\n        title: nodeModel.title,\r\n        isLeaf: !!nodeModel.isLeaf,\r\n        children: nodeModel.children ? this.getNodes(nodeModel.children, path) : [],\r\n        isExpanded: nodeModel.isExpanded == void 0 ? true : !!nodeModel.isExpanded,\r\n        isSelected: !!nodeModel.isSelected,\r\n        data: nodeModel.data !== void 0 ? nodeModel.data : {},\r\n\r\n        // define the all ISlTreeNode computed props\r\n        path: path,\r\n        pathStr: JSON.stringify(path),\r\n        ind,\r\n        isFirstChild: ind == 0,\r\n        isLastChild: ind === siblings.length - 1\r\n      };\r\n      return node;\r\n    },\r\n\r\n    emitInput(newValue) {\r\n      this.getRoot().$emit('input', newValue);\r\n    },\r\n\r\n    emitSelect(selectedNodes, event) {\r\n      this.getRoot().$emit('select', selectedNodes, event);\r\n    },\r\n\r\n    emitDrop(targetNode, position, event) {\r\n      this.getRoot().$emit('drop', targetNode, position, event);\r\n    },\r\n\r\n    emitToggle(toggledNode, event) {\r\n      this.getRoot().$emit('toggle', toggledNode, event);\r\n    },\r\n\r\n    emitNodeDblclick(node, event) {\r\n      this.getRoot().$emit('nodedblclick', node, event);\r\n    },\r\n\r\n    emitNodeContextmenu(node, event) {\r\n      this.getRoot().$emit('nodecontextmenu', node, event);\r\n    },\r\n\r\n    emitNodeclick(node, event) {\r\n      this.getRoot().$emit('nodeclick', node, event);\r\n    },\r\n\r\n    // emitDragleave(node, direction, event) {\r\n    //   this.getRoot().$emit('dragleave', node, direction, event);\r\n    // },\r\n    //\r\n    // onDragleaveHandler(event, node) {\r\n    //   const parentRect = this.getRoot().$el.getBoundingClientRect();\r\n    //   if (event.clientY > parentRect.bottom) {\r\n    //     this.emitDragleave(node, 'bottom', event);\r\n    //   } else if (event.clientY < parentRect.top) {\r\n    //     this.emitDragleave(node, 'top', event);\r\n    //   }\r\n    // },\r\n\r\n    onNodeClickHandler(event, clickedNode) {\r\n      if (!this.isRoot) {\r\n        // handle event only in the root component\r\n        this.getRoot().onNodeClickHandler(event, clickedNode);\r\n        return;\r\n      }\r\n\r\n      this.emitNodeclick(clickedNode, event);\r\n\r\n      if (event.defaultPrevented) return;\r\n      this.select(clickedNode, event);\r\n    },\r\n\r\n    select(clickedNode, event = null, addToSelection = false) {\r\n      addToSelection = ((event && event.ctrlKey) || addToSelection) && this.allowMultiselect;\r\n      const newNodes = this.copy(this.value);\r\n      const shiftSelectionMode = this.allowMultiselect && event.shiftKey && this.lastSelectedNode;\r\n      const selectedNodes = [];\r\n      let shiftSelectionStarted = false;\r\n\r\n      this.traverse((node, nodeModel) => {\r\n\r\n        if (shiftSelectionMode) {\r\n          if (node.pathStr === clickedNode.pathStr || node.pathStr === this.lastSelectedNode.pathStr) {\r\n            nodeModel.isSelected = true;\r\n            shiftSelectionStarted = !shiftSelectionStarted;\r\n          }\r\n          if (shiftSelectionStarted) nodeModel.isSelected = true;\r\n        } else if (node.pathStr === clickedNode.pathStr) {\r\n          nodeModel.isSelected = true;\r\n        } else if (!addToSelection) {\r\n          if (nodeModel.isSelected) nodeModel.isSelected = false;\r\n        }\r\n\r\n        if (nodeModel.isSelected) selectedNodes.push(node);\r\n\r\n      }, newNodes);\r\n\r\n\r\n      this.lastSelectedNode = clickedNode;\r\n      this.emitInput(newNodes);\r\n      this.emitSelect(selectedNodes, event);\r\n    },\r\n\r\n    onNodeMousemoveHandler(event, destNode) {\r\n      if (!this.isRoot) {\r\n        this.getRoot().onNodeMousemoveHandler(event, destNode);\r\n        return;\r\n      }\r\n\r\n      const initialDraggingState = this.isDragging;\r\n      this.isDragging =\r\n        this.mouseIsDown &&\r\n        (this.lastMousePos.x !== event.clientX || this.lastMousePos.y !== event.clientY);\r\n\r\n      const isDragStarted = initialDraggingState === false && this.isDragging === true;\r\n\r\n\r\n\r\n      this.lastMousePos = {\r\n        x: event.clientX,\r\n        y: event.clientY\r\n      };\r\n\r\n\r\n      if (!this.isDragging) return;\r\n\r\n      if (isDragStarted && !destNode.isSelected) {\r\n        this.select(destNode, event);\r\n      }\r\n\r\n\r\n      const $nodeItem = event.currentTarget;\r\n      const nodeHeight = $nodeItem.offsetHeight;\r\n      const edgeSize = this.edgeSize;\r\n      const offsetY = event.offsetY;\r\n      let placement;\r\n\r\n\r\n      if (destNode.isLeaf) {\r\n        placement = offsetY >= nodeHeight / 2 ? 'after' : 'before';\r\n      } else {\r\n        if (offsetY <= edgeSize) {\r\n          placement = 'before';\r\n        } else if (offsetY >= nodeHeight - edgeSize) {\r\n          placement = 'after';\r\n        } else {\r\n          placement = 'inside';\r\n        }\r\n      }\r\n\r\n      this.setCursorPosition({ node: destNode, placement });\r\n\r\n      const $root = this.getRoot().$el;\r\n      const rootRect = $root.getBoundingClientRect();\r\n      const $dragInfo = this.$refs.dragInfo;\r\n\r\n      $dragInfo.style.top = (event.clientY - rootRect.top + $root.scrollTop) + 'px';\r\n      $dragInfo.style.left = (event.clientX - rootRect.left) + 'px';\r\n\r\n      const scrollBottomLine = rootRect.bottom - this.scrollAreaHeight;\r\n      const scrollDownSpeed = (event.clientY - scrollBottomLine) / (rootRect.bottom - scrollBottomLine);\r\n      const scrollTopLine = rootRect.top + this.scrollAreaHeight;\r\n      const scrollTopSpeed = (scrollTopLine - event.clientY) / (scrollTopLine - rootRect.top);\r\n\r\n      if (scrollDownSpeed > 0) {\r\n        this.startScroll(scrollDownSpeed);\r\n      } else if (scrollTopSpeed > 0) {\r\n        this.startScroll(-scrollTopSpeed)\r\n      } else {\r\n        this.stopScroll();\r\n      }\r\n    },\r\n\r\n\r\n    onNodeDropHandler(event, targetNode) {\r\n\r\n    },\r\n\r\n    onNodeMousedownHandler(event, node) {\r\n      if (!this.isRoot) {\r\n        this.getRoot().onNodeMousedownHandler(event, node);\r\n        return;\r\n      }\r\n      this.mouseIsDown = true;\r\n    },\r\n\r\n\r\n    startScroll(speed) {\r\n      const $root = this.getRoot().$el;\r\n      if (this.scrollSpeed === speed) {\r\n        return;\r\n      } else if (this.scrollIntervalId) {\r\n        this.stopScroll();\r\n      }\r\n\r\n      this.scrollSpeed = speed;\r\n      this.scrollIntervalId = setInterval(() => {\r\n        $root.scrollTop += this.maxScrollSpeed * speed;\r\n      }, 20);\r\n    },\r\n\r\n    stopScroll() {\r\n      clearInterval(this.scrollIntervalId);\r\n      this.scrollIntervalId = 0;\r\n      this.scrollSpeed = 0;\r\n    },\r\n\r\n    onDocumentMouseupHandler(event) {\r\n      if (this.isDragging) this.onNodeMouseupHandler(event);\r\n    },\r\n\r\n    onNodeMouseupHandler(event, targetNode = null) {\r\n\r\n      if (!this.isRoot) {\r\n        this.getRoot().onNodeMouseupHandler(event, targetNode);\r\n        return;\r\n      }\r\n\r\n      this.mouseIsDown = false;\r\n\r\n      if (!this.isDragging && targetNode) {\r\n        this.select(targetNode, event);\r\n        return;\r\n      }\r\n\r\n      if (!this.cursorPosition) {\r\n        this.stopDrag();\r\n        return;\r\n      };\r\n\r\n\r\n      const draggingNodes = this.getSelected();\r\n\r\n      // check that nodes is possible to insert\r\n      for (let draggingNode of draggingNodes) {\r\n        if (draggingNode.pathStr == this.cursorPosition.node.pathStr) {\r\n          this.stopDrag();\r\n          return;\r\n        }\r\n\r\n        if (this.checkNodeIsParent(draggingNode, this.cursorPosition.node)) {\r\n          this.stopDrag();\r\n          return;\r\n        };\r\n      }\r\n\r\n      const newNodes = this.copy(this.value);\r\n      const nodeModelsToInsert = [];\r\n\r\n      // find and mark dragging model to delete\r\n      for (let draggingNode of draggingNodes) {\r\n        const sourceSiblings = this.getNodeSiblings(newNodes, draggingNode.path);\r\n        const draggingNodeModel = sourceSiblings[draggingNode.ind];\r\n        nodeModelsToInsert.push(this.copy(draggingNodeModel));\r\n        draggingNodeModel['_markToDelete'] = true;\r\n      }\r\n\r\n\r\n      // insert dragging nodes to the new place\r\n      const destNode = this.cursorPosition.node;\r\n      const destSiblings = this.getNodeSiblings(newNodes, destNode.path);\r\n      const destNodeModel = destSiblings[destNode.ind];\r\n\r\n      if (this.cursorPosition.placement === 'inside') {\r\n        destNodeModel.children = destNodeModel.children || [];\r\n        destNodeModel.children.unshift(...nodeModelsToInsert);\r\n      } else {\r\n        const insertInd = this.cursorPosition.placement === 'before' ?\r\n          destNode.ind :\r\n          destNode.ind + 1;\r\n\r\n        destSiblings.splice(insertInd, 0, ...nodeModelsToInsert);\r\n      }\r\n\r\n\r\n\r\n      // delete dragging node from the old place\r\n      this.traverse((node, nodeModel, siblings) => {\r\n        let i = siblings.length;\r\n        while (i--) {\r\n          if (siblings[i]['_markToDelete']) siblings.splice(i, 1);\r\n        }\r\n      }, newNodes);\r\n\r\n\r\n      this.lastSelectedNode = null;\r\n      this.emitInput(newNodes);\r\n      this.emitDrop(draggingNodes, this.cursorPosition, event);\r\n      this.stopDrag();\r\n    },\r\n\r\n\r\n    onToggleHandler(event, node) {\r\n      this.updateNode(node, { isExpanded: !node.isExpanded });\r\n      this.emitToggle(node, event);\r\n      event.stopPropagation();\r\n    },\r\n\r\n    stopDrag() {\r\n      this.isDragging = false;\r\n      this.mouseIsDown = false;\r\n      this.setCursorPosition(null);\r\n      this.stopScroll();\r\n    },\r\n\r\n\r\n    getParent() {\r\n      return this.$parent;\r\n    },\r\n\r\n    getRoot() {\r\n      if (this.isRoot) return this;\r\n      return this.getParent().getRoot();\r\n    },\r\n\r\n    getNodeSiblings(nodes, path) {\r\n      if (path.length === 1) return nodes;\r\n      return this.getNodeSiblings(nodes[path[0]].children, path.slice(1));\r\n    },\r\n\r\n\r\n    updateNode(nodeToUpdate, patch) {\r\n      if (!this.isRoot) {\r\n        this.getParent().updateNode(nodeToUpdate, patch);\r\n        return;\r\n      }\r\n\r\n      const newNodes = this.copy(this.value);\r\n      this.traverse((node, nodeModel) => {\r\n        if (node.pathStr !== nodeToUpdate.pathStr) return;\r\n        Object.assign(nodeModel, patch);\r\n      }, newNodes);\r\n\r\n      this.emitInput(newNodes);\r\n    },\r\n\r\n    getSelected() {\r\n      const selectedNodes = [];\r\n      this.traverse((node) => {\r\n        if (node.isSelected) selectedNodes.push(node);\r\n      });\r\n      return selectedNodes;\r\n    },\r\n\r\n\r\n    traverse(\r\n      cb,\r\n      nodeModels = null,\r\n      parentPath = []\r\n    ) {\r\n      if (!nodeModels) nodeModels = this.value;\r\n\r\n      let shouldStop = false;\r\n\r\n      const nodes = [];\r\n\r\n      nodeModels.forEach((nodeModel, nodeInd) => {\r\n        const itemPath = parentPath.concat(nodeInd);\r\n        const node = this.getNode(itemPath, nodeModel, nodeModels);\r\n        shouldStop = cb(node, nodeModel, nodeModels) === false;\r\n        nodes.push(node);\r\n\r\n        if (shouldStop) return false;\r\n\r\n        if (nodeModel.children) {\r\n          shouldStop = this.traverse(cb, nodeModel.children, itemPath) === false;\r\n        }\r\n      });\r\n\r\n      return !shouldStop ? nodes : false;\r\n    },\r\n\r\n    checkNodeIsParent(sourceNode, destNode) {\r\n      const destPath = destNode.path;\r\n      return JSON.stringify(destPath.slice(0, sourceNode.path.length)) == sourceNode.pathStr;\r\n    },\r\n\r\n    copy(entity) {\r\n      return JSON.parse(JSON.stringify(entity));\r\n    }\r\n\r\n  }\r\n};\r\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"sl-vue-tree\", class: { \"sl-vue-tree-root\": _vm.isRoot } },\n    [\n      _vm._l(_vm.nodes, function(node, nodeInd) {\n        return _c(\n          \"div\",\n          {\n            staticClass: \"sl-vue-tree-node\",\n            class: { \"sl-vue-tree-selected\": node.isSelected }\n          },\n          [\n            _c(\"div\", {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value:\n                    _vm.cursorPosition &&\n                    _vm.cursorPosition.node.pathStr === node.pathStr &&\n                    _vm.cursorPosition.placement === \"before\",\n                  expression:\n                    \"\\n        cursorPosition &&\\n        cursorPosition.node.pathStr === node.pathStr &&\\n        cursorPosition.placement === 'before'\\n      \"\n                }\n              ],\n              staticClass: \"sl-vue-tree-cursor sl-vue-tree-cursor_before\",\n              on: {\n                dragover: function(event) {\n                  return event.preventDefault()\n                }\n              }\n            }),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              {\n                staticClass: \"sl-vue-tree-node-item\",\n                class: {\n                  \"sl-vue-tree-cursor-inside\":\n                    _vm.cursorPosition &&\n                    _vm.cursorPosition.placement === \"inside\" &&\n                    _vm.cursorPosition.node.pathStr === node.pathStr,\n                  \"sl-vue-tree-node-is-leaf\": node.isLeaf,\n                  \"sl-vue-tree-node-is-folder\": !node.isLeaf\n                },\n                on: {\n                  mousemove: function(event) {\n                    return _vm.onNodeMousemoveHandler(event, node)\n                  },\n                  drop: function(event) {\n                    return _vm.onNodeDropHandler(event, node)\n                  },\n                  mousedown: function(event) {\n                    return _vm.onNodeMousedownHandler(event, node)\n                  },\n                  mouseup: function(event) {\n                    return _vm.onNodeMouseupHandler(event, node)\n                  },\n                  click: function(event) {\n                    return _vm.onNodeClickHandler(event, node)\n                  },\n                  contextmenu: function(event) {\n                    return _vm.emitNodeContextmenu(node, event)\n                  },\n                  dblclick: function(event) {\n                    return _vm.emitNodeDblclick(node, event)\n                  },\n                  dragleave: function(event) {\n                    return _vm.onDragleaveHandler(event, node)\n                  }\n                }\n              },\n              [\n                _vm._l(_vm.gaps, function(gapInd) {\n                  return _c(\"div\", { staticClass: \"sl-vue-tree-gap\" })\n                }),\n                _vm._v(\" \"),\n                _vm.level && _vm.showBranches\n                  ? _c(\n                      \"div\",\n                      { staticClass: \"sl-vue-tree-branch\" },\n                      [\n                        _vm._t(\n                          \"branch\",\n                          [\n                            !node.isLastChild\n                              ? _c(\"span\", [\n                                  _vm._v(\n                                    \"\\n            \" +\n                                      _vm._s(String.fromCharCode(0x251c)) +\n                                      _vm._s(String.fromCharCode(0x2500)) +\n                                      \" \\n          \"\n                                  )\n                                ])\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            node.isLastChild\n                              ? _c(\"span\", [\n                                  _vm._v(\n                                    \"\\n            \" +\n                                      _vm._s(String.fromCharCode(0x2514)) +\n                                      _vm._s(String.fromCharCode(0x2500)) +\n                                      \" \\n          \"\n                                  )\n                                ])\n                              : _vm._e()\n                          ],\n                          { node: node }\n                        )\n                      ],\n                      2\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  { staticClass: \"sl-vue-tree-title\" },\n                  [\n                    !node.isLeaf\n                      ? _c(\n                          \"span\",\n                          {\n                            staticClass: \"sl-vue-tree-toggle\",\n                            on: {\n                              click: function(event) {\n                                return _vm.onToggleHandler(event, node)\n                              }\n                            }\n                          },\n                          [\n                            _vm._t(\n                              \"toggle\",\n                              [\n                                _c(\"span\", [\n                                  _vm._v(\n                                    \"\\n             \" +\n                                      _vm._s(\n                                        !node.isLeaf\n                                          ? node.isExpanded ? \"-\" : \"+\"\n                                          : \"\"\n                                      ) +\n                                      \"\\n            \"\n                                  )\n                                ])\n                              ],\n                              { node: node }\n                            )\n                          ],\n                          2\n                        )\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _vm._t(\"title\", [_vm._v(_vm._s(node.title))], {\n                      node: node\n                    })\n                  ],\n                  2\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  { staticClass: \"sl-vue-tree-sidebar\" },\n                  [_vm._t(\"sidebar\", null, { node: node })],\n                  2\n                )\n              ],\n              2\n            ),\n            _vm._v(\" \"),\n            _c(\"div\", {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value:\n                    _vm.cursorPosition &&\n                    _vm.cursorPosition.node.pathStr === node.pathStr &&\n                    _vm.cursorPosition.placement === \"after\",\n                  expression:\n                    \"\\n        cursorPosition &&\\n        cursorPosition.node.pathStr === node.pathStr &&\\n        cursorPosition.placement === 'after'\\n      \"\n                }\n              ],\n              staticClass: \"sl-vue-tree-cursor sl-vue-tree-cursor_after\",\n              on: {\n                dragover: function(event) {\n                  return event.preventDefault()\n                }\n              }\n            }),\n            _vm._v(\" \"),\n            node.children && node.children.length && node.isExpanded\n              ? _c(\"sl-vue-tree\", {\n                  attrs: {\n                    value: node.children,\n                    level: _vm.level + 1,\n                    parentInd: nodeInd,\n                    allowMultiselect: _vm.allowMultiselect,\n                    edgeSize: _vm.edgeSize,\n                    showBranches: _vm.showBranches\n                  },\n                  on: {\n                    dragover: function(event) {\n                      return event.preventDefault()\n                    }\n                  },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"title\",\n                      fn: function(ref) {\n                        var node = ref.node\n                        return [\n                          _vm._t(\"title\", [_vm._v(_vm._s(node.title))], {\n                            node: node\n                          })\n                        ]\n                      }\n                    },\n                    {\n                      key: \"toggle\",\n                      fn: function(ref) {\n                        var node = ref.node\n                        return [\n                          _vm._t(\n                            \"toggle\",\n                            [\n                              _c(\"span\", [\n                                _vm._v(\n                                  \"\\n             \" +\n                                    _vm._s(\n                                      !node.isLeaf\n                                        ? node.isExpanded ? \"-\" : \"+\"\n                                        : \"\"\n                                    ) +\n                                    \"\\n          \"\n                                )\n                              ])\n                            ],\n                            { node: node }\n                          )\n                        ]\n                      }\n                    },\n                    {\n                      key: \"sidebar\",\n                      fn: function(ref) {\n                        var node = ref.node\n                        return [_vm._t(\"sidebar\", null, { node: node })]\n                      }\n                    }\n                  ])\n                })\n              : _vm._e()\n          ],\n          1\n        )\n      }),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: _vm.isDragging,\n              expression: \"isDragging\"\n            }\n          ],\n          ref: \"dragInfo\",\n          staticClass: \"sl-vue-tree-drag-info\"\n        },\n        [\n          _vm._t(\"draginfo\", [\n            _vm._v(\"\\n      Items: \" + _vm._s(_vm.selectionSize) + \"\\n    \")\n          ])\n        ],\n        2\n      )\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\nexport { render, staticRenderFns }\nif (module.hot) {\n  module.hot.accept()\n  if (module.hot.data) {\n    require(\"vue-hot-reload-api\")      .rerender(\"data-v-0b7c263a\", { render: render, staticRenderFns: staticRenderFns })\n  }\n}","var disposed = false\n/* script */\nexport * from \"!!babel-loader!./sl-vue-tree.js\"\nimport __vue_script__ from \"!!babel-loader!./sl-vue-tree.js\"/* template */\nimport {render as __vue_render__, staticRenderFns as __vue_static_render_fns__} from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0b7c263a\\\",\\\"hasScoped\\\":false,\\\"optionsId\\\":\\\"0\\\",\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./sl-vue-tree.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nimport normalizeComponent from \"!../node_modules/vue-loader/lib/runtime/component-normalizer\"\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_render__,\n  __vue_static_render_fns__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"src\\\\sl-vue-tree.vue\"\n\n/* hot reload */\nif (module.hot) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-0b7c263a\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-0b7c263a\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nexport default Component.exports\n","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  scriptExports = scriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof scriptExports.default\n  if (type === 'object' || type === 'function') {\n    scriptExports = scriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n"],"sourceRoot":""}