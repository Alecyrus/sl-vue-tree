{"version":3,"sources":["webpack://SlVueTree/webpack/universalModuleDefinition","webpack://SlVueTree/webpack/bootstrap","webpack://SlVueTree/./src/sl-vue-tree.js","webpack://SlVueTree/./src/sl-vue-tree.vue?75ef","webpack://SlVueTree/./src/sl-vue-tree.vue","webpack://SlVueTree/./node_modules/vue-loader/lib/runtime/component-normalizer.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","sl_vue_tree","props","type","Array","default","edgeSize","Number","showBranches","Boolean","level","parentInd","allowMultiselect","multiselectKey","String","validator","allowedKeys","multiselectKeys","isArray","filter","keyName","indexOf","length","scrollAreaHeight","maxScrollSpeed","[object Object]","rootCursorPosition","scrollIntervalId","scrollSpeed","lastSelectedNode","mouseIsDown","isDragging","lastMousePos","x","y","preventDrag","currentValue","this","isRoot","document","addEventListener","onDocumentMouseupHandler","removeEventListener","watch","newValue","computed","getParent","cursorPosition","nodeModels","copy","getNodes","nodes","children","gaps","push","getSelected","getDraggable","methods","pos","setCursorPosition","parentPath","isVisible","map","nodeModel","ind","nodePath","concat","getNode","path","siblings","slice","getNodeSiblings","isExpanded","isDraggable","isSelectable","title","isLeaf","isSelected","data","pathStr","JSON","stringify","isFirstChild","isLastChild","getRoot","$emit","selectedNodes","event","draggingNodes","position","toggledNode","node","preventDefault","getCursorPositionFromCoords","clientX","clientY","addToSelection","multiselectKeyIsPressed","find","key","selectedNode","newNodes","shiftSelectionMode","shiftKey","shiftSelectionStarted","traverse","emitInput","emitSelect","onMousemoveHandler","initialDraggingState","isDragStarted","$root","$el","rootRect","getBoundingClientRect","$dragInfo","$refs","dragInfo","dragInfoTop","top","scrollTop","style","marginBottom","dragInfoLeft","left","destNode","placement","select","scrollBottomLine","bottom","scrollDownSpeed","scrollTopLine","scrollTopSpeed","startScroll","stopScroll","$target","elementFromPoint","$nodeItem","getAttribute","closest","parse","nodeHeight","offsetHeight","offsetY","height","getLastNode","getFirstNode","querySelector","lastNode","resultNode","comparePaths","prevNodes","path1","path2","button","onNodeMousedownHandler","speed","setInterval","clearInterval","onNodeMouseupHandler","targetNode","stopDrag","draggingNode","checkNodeIsParent","nodeModelsToInsert","draggingNodeModel","destSiblings","destNodeModel","unshift","insertInd","splice","traverseModels","_markToDelete","emitDrop","updateNode","emitToggle","stopPropagation","$parent","patch","assign","cb","shouldStop","nodeInd","itemPath","paths","pathsStr","sourceNode","destPath","entity","render","_vm","_h","$createElement","_c","_self","staticClass","class","sl-vue-tree-root","on","mousemove","mouseleave","onMouseleaveHandler","dragend","$event","onDragendHandler","ref","_l","sl-vue-tree-selected","visibility","dragover","_v","sl-vue-tree-cursor-hover","sl-vue-tree-cursor-inside","sl-vue-tree-node-is-leaf","sl-vue-tree-node-is-folder","attrs","mousedown","mouseup","contextmenu","emitNodeContextmenu","dblclick","emitNodeDblclick","click","emitNodeClick","onExternalDragoverHandler","drop","onExternalDropHandler","gapInd","_t","_e","_s","fromCharCode","onToggleHandler","scopedSlots","_u","fn","directives","rawName","expression","selectionSize","_withStripped","Component","scriptExports","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","options","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","normalizeComponent","__file","__webpack_exports__"],"mappings":"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","file":"sl-vue-tree.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SlVueTree\"] = factory();\n\telse\n\t\troot[\"SlVueTree\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\r\nexport default {\r\n  name: 'sl-vue-tree',\r\n  props: {\r\n    value: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    edgeSize: {\r\n      type: Number,\r\n      default: 3\r\n    },\r\n    showBranches: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    level: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    parentInd: {\r\n      type: Number\r\n    },\r\n    allowMultiselect: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    multiselectKey: {\r\n      type: [String, Array],\r\n      default: function () {\r\n        return ['ctrlKey', 'metaKey']\r\n      },\r\n      validator: function (value) {\r\n        let allowedKeys = ['ctrlKey', 'metaKey', 'altKey'];\r\n        let multiselectKeys = Array.isArray(value) ? value : [value];\r\n        multiselectKeys = multiselectKeys.filter(keyName => allowedKeys.indexOf(keyName ) !== -1);\r\n        return !!multiselectKeys.length;\r\n      }\r\n    },\r\n    scrollAreaHeight: {\r\n      type: Number,\r\n      default: 70\r\n    },\r\n    maxScrollSpeed: {\r\n      type: Number,\r\n      default: 20\r\n    }\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      rootCursorPosition: null,\r\n      scrollIntervalId: 0,\r\n      scrollSpeed: 0,\r\n      lastSelectedNode: null,\r\n      mouseIsDown: false,\r\n      isDragging: false,\r\n      lastMousePos: {x: 0, y: 0},\r\n      preventDrag: false,\r\n      currentValue: this.value\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    if (this.isRoot) {\r\n      document.addEventListener('mouseup', this.onDocumentMouseupHandler);\r\n    }\r\n  },\r\n\r\n  beforeDestroy() {\r\n    document.removeEventListener('mouseup', this.onDocumentMouseupHandler);\r\n  },\r\n\r\n  watch: {\r\n    value: function (newValue) {\r\n      this.currentValue = newValue;\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    cursorPosition() {\r\n      if (this.isRoot) return this.rootCursorPosition;\r\n      return this.getParent().cursorPosition;\r\n    },\r\n\r\n    nodes() {\r\n      if (this.isRoot) {\r\n        const nodeModels = this.copy(this.currentValue);\r\n        return this.getNodes(nodeModels);\r\n      }\r\n\r\n      return this.getParent().nodes[this.parentInd].children;\r\n    },\r\n    /**\r\n   * gaps is using for nodes indentation\r\n   * @returns {number[]}\r\n   */\r\n    gaps() {\r\n      const gaps = [];\r\n      let i = this.level - 1;\r\n      if (!this.showBranches) i++;\r\n      while (i-- > 0) gaps.push(i);\r\n      return gaps;\r\n    },\r\n\r\n    isRoot() {\r\n      return !this.level\r\n    },\r\n\r\n    selectionSize() {\r\n      return this.getSelected().length;\r\n    },\r\n\r\n    dragSize() {\r\n      return this.getDraggable().length;\r\n    }\r\n  },\r\n  methods: {\r\n\r\n    setCursorPosition(pos) {\r\n      if (this.isRoot) {\r\n        this.rootCursorPosition = pos;\r\n        return;\r\n      }\r\n      this.getParent().setCursorPosition(pos);\r\n    },\r\n\r\n    getNodes(nodeModels, parentPath = [], isVisible = true) {\r\n\r\n      return nodeModels.map((nodeModel, ind) => {\r\n        const nodePath = parentPath.concat(ind);\r\n        return this.getNode(nodePath, nodeModel, nodeModels, isVisible);\r\n      })\r\n    },\r\n\r\n    getNode(\r\n      path,\r\n      nodeModel = null,\r\n      siblings = null,\r\n      isVisible = null\r\n    ) {\r\n      const ind = path.slice(-1)[0];\r\n\r\n      // calculate nodeModel, siblings, isVisible fields if it is not passed as arguments\r\n      siblings = siblings || this.getNodeSiblings(this.currentValue, path);\r\n      nodeModel = nodeModel || (siblings && siblings[ind]) || null;\r\n\r\n      if (isVisible == null) {\r\n        isVisible = this.isVisible(path);\r\n      }\r\n\r\n      if (!nodeModel) return null;\r\n\r\n      const isExpanded = nodeModel.isExpanded == void 0 ? true : !!nodeModel.isExpanded;\r\n      const isDraggable = nodeModel.isDraggable == void 0 ? true : !!nodeModel.isDraggable;\r\n      const isSelectable = nodeModel.isSelectable == void 0 ? true : !!nodeModel.isSelectable;\r\n\r\n      const node = {\r\n\r\n        // define the all ISlTreeNodeModel props\r\n        title: nodeModel.title,\r\n        isLeaf: !!nodeModel.isLeaf,\r\n        children: nodeModel.children ? this.getNodes(nodeModel.children, path, isExpanded) : [],\r\n        isSelected: !!nodeModel.isSelected,\r\n        isExpanded,\r\n        isVisible,\r\n        isDraggable,\r\n        isSelectable,\r\n        data: nodeModel.data !== void 0 ? nodeModel.data : {},\r\n\r\n        // define the all ISlTreeNode computed props\r\n        path: path,\r\n        pathStr: JSON.stringify(path),\r\n        level: path.length,\r\n        ind,\r\n        isFirstChild: ind == 0,\r\n        isLastChild: ind === siblings.length - 1\r\n      };\r\n      return node;\r\n    },\r\n\r\n    isVisible(path) {\r\n      if (path.length < 2) return true;\r\n      let nodeModels = this.currentValue;\r\n\r\n      for (let i = 0; i < path.length - 1; i++) {\r\n        let ind = path[i];\r\n        let nodeModel = nodeModels[ind];\r\n        let isExpanded = nodeModel.isExpanded == void 0 ? true : !!nodeModel.isExpanded;\r\n        if (!isExpanded) return false;\r\n        nodeModels = nodeModel.children;\r\n      }\r\n\r\n      return true;\r\n    },\r\n\r\n    emitInput(newValue) {\r\n      this.currentValue = newValue;\r\n      this.getRoot().$emit('input', newValue);\r\n    },\r\n\r\n    emitSelect(selectedNodes, event) {\r\n      this.getRoot().$emit('select', selectedNodes, event);\r\n    },\r\n\r\n    emitDrop(draggingNodes, position, event) {\r\n      this.getRoot().$emit('drop', draggingNodes, position, event);\r\n    },\r\n\r\n    emitToggle(toggledNode, event) {\r\n      this.getRoot().$emit('toggle', toggledNode, event);\r\n    },\r\n\r\n    emitNodeClick(node, event) {\r\n      this.getRoot().$emit('nodeclick', node, event);\r\n    },\r\n\r\n    emitNodeDblclick(node, event) {\r\n      this.getRoot().$emit('nodedblclick', node, event);\r\n    },\r\n\r\n    emitNodeContextmenu(node, event) {\r\n      this.getRoot().$emit('nodecontextmenu', node, event);\r\n    },\r\n\r\n    onExternalDragoverHandler(node, event) {\r\n      event.preventDefault();\r\n      const root = this.getRoot();\r\n      const cursorPosition = root.getCursorPositionFromCoords(event.clientX, event.clientY);\r\n      root.setCursorPosition(cursorPosition);\r\n      root.$emit('externaldragover', cursorPosition, event);\r\n    },\r\n\r\n    onExternalDropHandler(node, event) {\r\n      const root = this.getRoot();\r\n      const cursorPosition = root.getCursorPositionFromCoords(event.clientX, event.clientY);\r\n      root.$emit('externaldrop', cursorPosition, event);\r\n      this.setCursorPosition(null);\r\n    },\r\n\r\n    select(path, addToSelection = false, event = null) {\r\n      const multiselectKeys = Array.isArray(this.multiselectKey) ?\r\n        this.multiselectKey:\r\n        [this.multiselectKey];\r\n      const multiselectKeyIsPressed = event && !!multiselectKeys.find(key => event[key]);\r\n      addToSelection = (multiselectKeyIsPressed || addToSelection) && this.allowMultiselect ;\r\n\r\n      const selectedNode = this.getNode(path);\r\n      if (!selectedNode) return null;\r\n      const newNodes = this.copy(this.currentValue);\r\n      const shiftSelectionMode = this.allowMultiselect && event && event.shiftKey && this.lastSelectedNode;\r\n      const selectedNodes = [];\r\n      let shiftSelectionStarted = false;\r\n\r\n      this.traverse((node, nodeModel) => {\r\n\r\n\r\n        if (shiftSelectionMode) {\r\n          if (node.pathStr === selectedNode.pathStr || node.pathStr === this.lastSelectedNode.pathStr) {\r\n            nodeModel.isSelected = node.isSelectable;\r\n            shiftSelectionStarted = !shiftSelectionStarted;\r\n          }\r\n          if (shiftSelectionStarted) nodeModel.isSelected = node.isSelectable;\r\n        } else if (node.pathStr === selectedNode.pathStr) {\r\n          nodeModel.isSelected = node.isSelectable;\r\n        } else if (!addToSelection) {\r\n          if (nodeModel.isSelected) nodeModel.isSelected = false;\r\n        }\r\n\r\n        if (nodeModel.isSelected) selectedNodes.push(node);\r\n\r\n      }, newNodes);\r\n\r\n\r\n      this.lastSelectedNode = selectedNode;\r\n      this.emitInput(newNodes);\r\n      this.emitSelect(selectedNodes, event);\r\n      return selectedNode;\r\n    },\r\n\r\n    onMousemoveHandler(event) {\r\n      if (!this.isRoot) {\r\n        this.getRoot().onMousemoveHandler(event);\r\n        return;\r\n      }\r\n\r\n      if (this.preventDrag) return;\r\n\r\n      const initialDraggingState = this.isDragging;\r\n      const isDragging =\r\n        this.isDragging || (\r\n        this.mouseIsDown &&\r\n        (this.lastMousePos.x !== event.clientX || this.lastMousePos.y !== event.clientY)\r\n      );\r\n\r\n      const isDragStarted = initialDraggingState === false && isDragging === true;\r\n\r\n      this.lastMousePos = {\r\n        x: event.clientX,\r\n        y: event.clientY\r\n      };\r\n\r\n      if (!isDragging) return;\r\n\r\n      const $root = this.getRoot().$el;\r\n      const rootRect = $root.getBoundingClientRect();\r\n      const $dragInfo = this.$refs.dragInfo;\r\n      const dragInfoTop = (event.clientY - rootRect.top + $root.scrollTop - ($dragInfo.style.marginBottom | 0) );\r\n      const dragInfoLeft = (event.clientX - rootRect.left);\r\n\r\n      $dragInfo.style.top = dragInfoTop + 'px';\r\n      $dragInfo.style.left = dragInfoLeft + 'px';\r\n\r\n      const cursorPosition = this.getCursorPositionFromCoords(event.clientX, event.clientY);\r\n      const destNode = cursorPosition.node;\r\n      const placement = cursorPosition.placement;\r\n\r\n      if (isDragStarted && !destNode.isSelected) {\r\n        this.select(destNode.path, false, event);\r\n      }\r\n\r\n      const draggableNodes = this.getDraggable();\r\n      if (!draggableNodes.length) {\r\n        this.preventDrag = true;\r\n        return;\r\n      }\r\n\r\n      this.isDragging = isDragging;\r\n\r\n      this.setCursorPosition({ node: destNode, placement });\r\n\r\n      const scrollBottomLine = rootRect.bottom - this.scrollAreaHeight;\r\n      const scrollDownSpeed = (event.clientY - scrollBottomLine) / (rootRect.bottom - scrollBottomLine);\r\n      const scrollTopLine = rootRect.top + this.scrollAreaHeight;\r\n      const scrollTopSpeed = (scrollTopLine - event.clientY) / (scrollTopLine - rootRect.top);\r\n\r\n      if (scrollDownSpeed > 0) {\r\n        this.startScroll(scrollDownSpeed);\r\n      } else if (scrollTopSpeed > 0) {\r\n        this.startScroll(-scrollTopSpeed)\r\n      } else {\r\n        this.stopScroll();\r\n      }\r\n    },\r\n\r\n    getCursorPositionFromCoords(x, y) {\r\n      const $target = document.elementFromPoint(x, y);\r\n      const $nodeItem = $target.getAttribute('path') ? $target : $target.closest('[path]');\r\n      let destNode;\r\n      let placement;\r\n\r\n      if ($nodeItem) {\r\n\r\n        if (!$nodeItem) return;\r\n\r\n        destNode = this.getNode(JSON.parse($nodeItem.getAttribute('path')));\r\n\r\n        const nodeHeight = $nodeItem.offsetHeight;\r\n        const edgeSize = this.edgeSize;\r\n        const offsetY = y - $nodeItem.getBoundingClientRect().top;\r\n\r\n\r\n        if (destNode.isLeaf) {\r\n          placement = offsetY >= nodeHeight / 2 ? 'after' : 'before';\r\n        } else {\r\n          if (offsetY <= edgeSize) {\r\n            placement = 'before';\r\n          } else if (offsetY >= nodeHeight - edgeSize) {\r\n            placement = 'after';\r\n          } else {\r\n            placement = 'inside';\r\n          }\r\n        }\r\n      } else {\r\n        const $root = this.getRoot().$el;\r\n        const rootRect = $root.getBoundingClientRect();\r\n        if (y > rootRect.top + (rootRect.height / 2)) {\r\n          placement = 'after';\r\n          destNode = this.getLastNode();\r\n        } else {\r\n          placement = 'before';\r\n          destNode = this.getFirstNode();\r\n        }\r\n      }\r\n\r\n      return { node: destNode, placement };\r\n    },\r\n\r\n    onMouseleaveHandler(event) {\r\n      if (!this.isRoot || !this.isDragging) return;\r\n      const $root = this.getRoot().$el;\r\n      const rootRect = $root.getBoundingClientRect();\r\n      if (event.clientY >= rootRect.bottom) {\r\n        this.setCursorPosition({ node: this.nodes.slice(-1)[0], placement: 'after' });\r\n      } else if (event.clientY < rootRect.top) {\r\n        this.setCursorPosition({ node: this.getFirstNode(), placement: 'before'});\r\n      }\r\n    },\r\n\r\n    getNodeEl(path) {\r\n      this.getRoot().$el.querySelector(`[path=\"${JSON.stringify(path)}\"]`);\r\n    },\r\n\r\n    getLastNode() {\r\n      let lastNode  = null;\r\n      this.traverse((node) => {\r\n        lastNode = node;\r\n      });\r\n      return lastNode;\r\n    },\r\n\r\n    getFirstNode() {\r\n      return this.getNode([0]);\r\n    },\r\n\r\n    getNextNode(path, filter = null) {\r\n\r\n      let resultNode = null;\r\n\r\n      this.traverse((node) => {\r\n        if (this.comparePaths(node.path, path) < 1) return;\r\n\r\n        if (!filter || filter(node)) {\r\n          resultNode = node;\r\n          return false; // stop traverse\r\n        }\r\n\r\n      });\r\n\r\n      return resultNode;\r\n    },\r\n\r\n    getPrevNode(path, filter) {\r\n      let prevNodes = [];\r\n\r\n      this.traverse((node) => {\r\n        if (this.comparePaths(node.path, path) >= 0) {\r\n          return false;\r\n        }\r\n        prevNodes.push(node);\r\n      });\r\n\r\n      let i = prevNodes.length;\r\n      while (i--) {\r\n        const node = prevNodes[i];\r\n        if (!filter || filter(node)) return node;\r\n      }\r\n\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * returns 1 if path1 > path2\r\n     * returns -1 if path1 < path2\r\n     * returns 0 if path1 == path2\r\n     *\r\n     * examples\r\n     *\r\n     * [1, 2, 3] < [1, 2, 4]\r\n     * [1, 1, 3] < [1, 2, 3]\r\n     * [1, 2, 3] > [1, 2, 0]\r\n     * [1, 2, 3] > [1, 1, 3]\r\n     * [1, 2] < [1, 2, 0]\r\n     *\r\n     */\r\n    comparePaths(path1, path2) {\r\n      for (let i = 0; i < path1.length; i++) {\r\n        if (path2[i] == void 0) return 1;\r\n        if (path1[i] > path2[i]) return 1;\r\n        if (path1[i] < path2[i]) return -1;\r\n      }\r\n      return path2[path1.length] == void 0 ? 0 : -1;\r\n    },\r\n\r\n    onNodeMousedownHandler(event, node) {\r\n      // handle only left mouse button\r\n      if (event.button !== 0) return;\r\n\r\n      if (!this.isRoot) {\r\n        this.getRoot().onNodeMousedownHandler(event, node);\r\n        return;\r\n      }\r\n      this.mouseIsDown = true;\r\n    },\r\n\r\n\r\n    startScroll(speed) {\r\n      const $root = this.getRoot().$el;\r\n      if (this.scrollSpeed === speed) {\r\n        return;\r\n      } else if (this.scrollIntervalId) {\r\n        this.stopScroll();\r\n      }\r\n\r\n      this.scrollSpeed = speed;\r\n      this.scrollIntervalId = setInterval(() => {\r\n        $root.scrollTop += this.maxScrollSpeed * speed;\r\n      }, 20);\r\n    },\r\n\r\n    stopScroll() {\r\n      clearInterval(this.scrollIntervalId);\r\n      this.scrollIntervalId = 0;\r\n      this.scrollSpeed = 0;\r\n    },\r\n\r\n    onDocumentMouseupHandler(event) {\r\n      if (this.isDragging) this.onNodeMouseupHandler(event);\r\n    },\r\n\r\n    onNodeMouseupHandler(event, targetNode = null) {\r\n\r\n      // handle only left mouse button\r\n      if (event.button !== 0) return;\r\n\r\n      if (!this.isRoot) {\r\n        this.getRoot().onNodeMouseupHandler(event, targetNode);\r\n        return;\r\n      }\r\n\r\n      this.mouseIsDown = false;\r\n\r\n      if (!this.isDragging && targetNode && !this.preventDrag) {\r\n        this.select(targetNode.path, false, event);\r\n      }\r\n\r\n      this.preventDrag = false;\r\n\r\n      if (!this.cursorPosition) {\r\n        this.stopDrag();\r\n        return;\r\n      };\r\n\r\n\r\n      const draggingNodes = this.getDraggable();\r\n\r\n      // check that nodes is possible to insert\r\n      for (let draggingNode of draggingNodes) {\r\n        if (draggingNode.pathStr == this.cursorPosition.node.pathStr) {\r\n          this.stopDrag();\r\n          return;\r\n        }\r\n\r\n        if (this.checkNodeIsParent(draggingNode, this.cursorPosition.node)) {\r\n          this.stopDrag();\r\n          return;\r\n        };\r\n      }\r\n\r\n      const newNodes = this.copy(this.currentValue);\r\n      const nodeModelsToInsert = [];\r\n\r\n      // find and mark dragging model to delete\r\n      for (let draggingNode of draggingNodes) {\r\n        const sourceSiblings = this.getNodeSiblings(newNodes, draggingNode.path);\r\n        const draggingNodeModel = sourceSiblings[draggingNode.ind];\r\n        nodeModelsToInsert.push(this.copy(draggingNodeModel));\r\n        draggingNodeModel['_markToDelete'] = true;\r\n      }\r\n\r\n\r\n      // insert dragging nodes to the new place\r\n      const destNode = this.cursorPosition.node;\r\n      const destSiblings = this.getNodeSiblings(newNodes, destNode.path);\r\n      const destNodeModel = destSiblings[destNode.ind];\r\n\r\n      if (this.cursorPosition.placement === 'inside') {\r\n        destNodeModel.children = destNodeModel.children || [];\r\n        destNodeModel.children.unshift(...nodeModelsToInsert);\r\n      } else {\r\n        const insertInd = this.cursorPosition.placement === 'before' ?\r\n          destNode.ind :\r\n          destNode.ind + 1;\r\n\r\n        destSiblings.splice(insertInd, 0, ...nodeModelsToInsert);\r\n      }\r\n\r\n\r\n\r\n      // delete dragging node from the old place\r\n      this.traverseModels((nodeModel, siblings, ind) => {\r\n        if (!nodeModel._markToDelete) return;\r\n        siblings.splice(ind, 1);\r\n      }, newNodes);\r\n\r\n\r\n      this.lastSelectedNode = null;\r\n      this.emitInput(newNodes);\r\n      this.emitDrop(draggingNodes, this.cursorPosition, event);\r\n      this.stopDrag();\r\n    },\r\n\r\n\r\n    onToggleHandler(event, node) {\r\n      this.updateNode(node.path, { isExpanded: !node.isExpanded });\r\n      this.emitToggle(node, event);\r\n      event.stopPropagation();\r\n    },\r\n\r\n    stopDrag() {\r\n      this.isDragging = false;\r\n      this.mouseIsDown = false;\r\n      this.setCursorPosition(null);\r\n      this.stopScroll();\r\n    },\r\n\r\n\r\n    getParent() {\r\n      return this.$parent;\r\n    },\r\n\r\n    getRoot() {\r\n      if (this.isRoot) return this;\r\n      return this.getParent().getRoot();\r\n    },\r\n\r\n    getNodeSiblings(nodes, path) {\r\n      if (path.length === 1) return nodes;\r\n      return this.getNodeSiblings(nodes[path[0]].children, path.slice(1));\r\n    },\r\n\r\n\r\n    updateNode(path, patch) {\r\n      if (!this.isRoot) {\r\n        this.getParent().updateNode(path, patch);\r\n        return;\r\n      }\r\n\r\n      const pathStr = JSON.stringify(path);\r\n      const newNodes = this.copy(this.currentValue);\r\n      this.traverse((node, nodeModel) => {\r\n        if (node.pathStr !== pathStr) return;\r\n        Object.assign(nodeModel, patch);\r\n      }, newNodes);\r\n\r\n      this.emitInput(newNodes);\r\n    },\r\n\r\n    getSelected() {\r\n      const selectedNodes = [];\r\n      this.traverse((node) => {\r\n        if (node.isSelected) selectedNodes.push(node);\r\n      });\r\n      return selectedNodes;\r\n    },\r\n\r\n    getDraggable() {\r\n      const selectedNodes = [];\r\n      this.traverse((node) => {\r\n        if (node.isSelected && node.isDraggable) selectedNodes.push(node);\r\n      });\r\n      return selectedNodes;\r\n    },\r\n\r\n\r\n    traverse(\r\n      cb,\r\n      nodeModels = null,\r\n      parentPath = []\r\n    ) {\r\n      if (!nodeModels) nodeModels = this.currentValue;\r\n\r\n      let shouldStop = false;\r\n\r\n      const nodes = [];\r\n\r\n      for (let nodeInd = 0; nodeInd < nodeModels.length; nodeInd++) {\r\n        const nodeModel = nodeModels[nodeInd];\r\n        const itemPath = parentPath.concat(nodeInd);\r\n        const node = this.getNode(itemPath, nodeModel, nodeModels);\r\n        shouldStop = cb(node, nodeModel, nodeModels) === false;\r\n        nodes.push(node);\r\n\r\n        if (shouldStop) break;\r\n\r\n        if (nodeModel.children) {\r\n          shouldStop = this.traverse(cb, nodeModel.children, itemPath) === false;\r\n          if (shouldStop) break;\r\n        }\r\n      }\r\n\r\n      return !shouldStop ? nodes : false;\r\n    },\r\n\r\n    traverseModels(cb, nodeModels) {\r\n      let i = nodeModels.length;\r\n      while (i--) {\r\n        const nodeModel = nodeModels[i];\r\n        if (nodeModel.children) this.traverseModels(cb, nodeModel.children);\r\n        cb(nodeModel, nodeModels, i);\r\n      }\r\n      return nodeModels;\r\n    },\r\n\r\n    remove(paths) {\r\n      const pathsStr = paths.map(path => JSON.stringify(path));\r\n      const newNodes = this.copy(this.currentValue);\r\n      this.traverse( (node, nodeModel, siblings) => {\r\n        for (const pathStr of pathsStr) {\r\n          if (node.pathStr === pathStr) nodeModel._markToDelete = true;\r\n        }\r\n      }, newNodes);\r\n\r\n      this.traverseModels((nodeModel, siblings, ind) => {\r\n        if (!nodeModel._markToDelete) return;\r\n        siblings.splice(ind, 1);\r\n      }, newNodes);\r\n\r\n      this.emitInput(newNodes);\r\n    },\r\n\r\n    checkNodeIsParent(sourceNode, destNode) {\r\n      const destPath = destNode.path;\r\n      return JSON.stringify(destPath.slice(0, sourceNode.path.length)) == sourceNode.pathStr;\r\n    },\r\n\r\n    copy(entity) {\r\n      return JSON.parse(JSON.stringify(entity));\r\n    }\r\n\r\n  }\r\n};\r\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      staticClass: \"sl-vue-tree\",\n      class: { \"sl-vue-tree-root\": _vm.isRoot },\n      on: {\n        mousemove: _vm.onMousemoveHandler,\n        mouseleave: _vm.onMouseleaveHandler,\n        dragend: function($event) {\n          _vm.onDragendHandler(null, $event)\n        }\n      }\n    },\n    [\n      _c(\n        \"div\",\n        { ref: \"nodes\", staticClass: \"sl-vue-tree-nodes-list\" },\n        [\n          _vm._l(_vm.nodes, function(node, nodeInd) {\n            return _c(\n              \"div\",\n              {\n                staticClass: \"sl-vue-tree-node\",\n                class: { \"sl-vue-tree-selected\": node.isSelected }\n              },\n              [\n                _c(\"div\", {\n                  staticClass: \"sl-vue-tree-cursor sl-vue-tree-cursor_before\",\n                  style: {\n                    visibility:\n                      _vm.cursorPosition &&\n                      _vm.cursorPosition.node.pathStr === node.pathStr &&\n                      _vm.cursorPosition.placement === \"before\"\n                        ? \"visible\"\n                        : \"hidden\"\n                  },\n                  on: {\n                    dragover: function($event) {\n                      $event.preventDefault()\n                    }\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  {\n                    staticClass: \"sl-vue-tree-node-item\",\n                    class: {\n                      \"sl-vue-tree-cursor-hover\":\n                        _vm.cursorPosition &&\n                        _vm.cursorPosition.node.pathStr === node.pathStr,\n\n                      \"sl-vue-tree-cursor-inside\":\n                        _vm.cursorPosition &&\n                        _vm.cursorPosition.placement === \"inside\" &&\n                        _vm.cursorPosition.node.pathStr === node.pathStr,\n                      \"sl-vue-tree-node-is-leaf\": node.isLeaf,\n                      \"sl-vue-tree-node-is-folder\": !node.isLeaf\n                    },\n                    attrs: { path: node.pathStr },\n                    on: {\n                      mousedown: function($event) {\n                        _vm.onNodeMousedownHandler($event, node)\n                      },\n                      mouseup: function($event) {\n                        _vm.onNodeMouseupHandler($event, node)\n                      },\n                      contextmenu: function($event) {\n                        _vm.emitNodeContextmenu(node, $event)\n                      },\n                      dblclick: function($event) {\n                        _vm.emitNodeDblclick(node, $event)\n                      },\n                      click: function($event) {\n                        _vm.emitNodeClick(node, $event)\n                      },\n                      dragover: function($event) {\n                        _vm.onExternalDragoverHandler(node, $event)\n                      },\n                      drop: function($event) {\n                        _vm.onExternalDropHandler(node, $event)\n                      }\n                    }\n                  },\n                  [\n                    _vm._l(_vm.gaps, function(gapInd) {\n                      return _c(\"div\", { staticClass: \"sl-vue-tree-gap\" })\n                    }),\n                    _vm._v(\" \"),\n                    _vm.level && _vm.showBranches\n                      ? _c(\n                          \"div\",\n                          { staticClass: \"sl-vue-tree-branch\" },\n                          [\n                            _vm._t(\n                              \"branch\",\n                              [\n                                !node.isLastChild\n                                  ? _c(\"span\", [\n                                      _vm._v(\n                                        \"\\n            \" +\n                                          _vm._s(String.fromCharCode(0x251c)) +\n                                          _vm._s(String.fromCharCode(0x2500)) +\n                                          \" \\n          \"\n                                      )\n                                    ])\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                node.isLastChild\n                                  ? _c(\"span\", [\n                                      _vm._v(\n                                        \"\\n            \" +\n                                          _vm._s(String.fromCharCode(0x2514)) +\n                                          _vm._s(String.fromCharCode(0x2500)) +\n                                          \" \\n          \"\n                                      )\n                                    ])\n                                  : _vm._e()\n                              ],\n                              { node: node }\n                            )\n                          ],\n                          2\n                        )\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      { staticClass: \"sl-vue-tree-title\" },\n                      [\n                        !node.isLeaf\n                          ? _c(\n                              \"span\",\n                              {\n                                staticClass: \"sl-vue-tree-toggle\",\n                                on: {\n                                  click: function($event) {\n                                    _vm.onToggleHandler($event, node)\n                                  }\n                                }\n                              },\n                              [\n                                _vm._t(\n                                  \"toggle\",\n                                  [\n                                    _c(\"span\", [\n                                      _vm._v(\n                                        \"\\n             \" +\n                                          _vm._s(\n                                            !node.isLeaf\n                                              ? node.isExpanded\n                                                ? \"-\"\n                                                : \"+\"\n                                              : \"\"\n                                          ) +\n                                          \"\\n            \"\n                                      )\n                                    ])\n                                  ],\n                                  { node: node }\n                                )\n                              ],\n                              2\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        _vm._t(\"title\", [_vm._v(_vm._s(node.title))], {\n                          node: node\n                        }),\n                        _vm._v(\" \"),\n                        !node.isLeaf &&\n                        node.children.length == 0 &&\n                        node.isExpanded\n                          ? _vm._t(\"empty-node\", null, { node: node })\n                          : _vm._e()\n                      ],\n                      2\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      { staticClass: \"sl-vue-tree-sidebar\" },\n                      [_vm._t(\"sidebar\", null, { node: node })],\n                      2\n                    )\n                  ],\n                  2\n                ),\n                _vm._v(\" \"),\n                node.children && node.children.length && node.isExpanded\n                  ? _c(\"sl-vue-tree\", {\n                      attrs: {\n                        value: node.children,\n                        level: node.level,\n                        parentInd: nodeInd,\n                        allowMultiselect: _vm.allowMultiselect,\n                        edgeSize: _vm.edgeSize,\n                        showBranches: _vm.showBranches\n                      },\n                      on: {\n                        dragover: function($event) {\n                          $event.preventDefault()\n                        }\n                      },\n                      scopedSlots: _vm._u([\n                        {\n                          key: \"title\",\n                          fn: function(ref) {\n                            var node = ref.node\n                            return [\n                              _vm._t(\"title\", [_vm._v(_vm._s(node.title))], {\n                                node: node\n                              })\n                            ]\n                          }\n                        },\n                        {\n                          key: \"toggle\",\n                          fn: function(ref) {\n                            var node = ref.node\n                            return [\n                              _vm._t(\n                                \"toggle\",\n                                [\n                                  _c(\"span\", [\n                                    _vm._v(\n                                      \"\\n             \" +\n                                        _vm._s(\n                                          !node.isLeaf\n                                            ? node.isExpanded\n                                              ? \"-\"\n                                              : \"+\"\n                                            : \"\"\n                                        ) +\n                                        \"\\n          \"\n                                    )\n                                  ])\n                                ],\n                                { node: node }\n                              )\n                            ]\n                          }\n                        },\n                        {\n                          key: \"sidebar\",\n                          fn: function(ref) {\n                            var node = ref.node\n                            return [_vm._t(\"sidebar\", null, { node: node })]\n                          }\n                        },\n                        {\n                          key: \"empty-node\",\n                          fn: function(ref) {\n                            var node = ref.node\n                            return [\n                              !node.isLeaf &&\n                              node.children.length == 0 &&\n                              node.isExpanded\n                                ? _vm._t(\"empty-node\", null, { node: node })\n                                : _vm._e()\n                            ]\n                          }\n                        }\n                      ])\n                    })\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"div\", {\n                  staticClass: \"sl-vue-tree-cursor sl-vue-tree-cursor_after\",\n                  style: {\n                    visibility:\n                      _vm.cursorPosition &&\n                      _vm.cursorPosition.node.pathStr === node.pathStr &&\n                      _vm.cursorPosition.placement === \"after\"\n                        ? \"visible\"\n                        : \"hidden\"\n                  },\n                  on: {\n                    dragover: function($event) {\n                      $event.preventDefault()\n                    }\n                  }\n                })\n              ],\n              1\n            )\n          }),\n          _vm._v(\" \"),\n          _vm.isRoot\n            ? _c(\n                \"div\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: _vm.isDragging,\n                      expression: \"isDragging\"\n                    }\n                  ],\n                  ref: \"dragInfo\",\n                  staticClass: \"sl-vue-tree-drag-info\"\n                },\n                [\n                  _vm._t(\"draginfo\", [\n                    _vm._v(\n                      \"\\n        Items: \" +\n                        _vm._s(_vm.selectionSize) +\n                        \"\\n      \"\n                    )\n                  ])\n                ],\n                2\n              )\n            : _vm._e()\n        ],\n        2\n      )\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\nexport { render, staticRenderFns }\nif (module.hot) {\n  module.hot.accept()\n  if (module.hot.data) {\n    require(\"vue-hot-reload-api\")      .rerender(\"data-v-0b7c263a\", { render: render, staticRenderFns: staticRenderFns })\n  }\n}","var disposed = false\n/* script */\nexport * from \"!!!./sl-vue-tree.js\"\nimport __vue_script__ from \"!!!./sl-vue-tree.js\"/* template */\nimport {render as __vue_render__, staticRenderFns as __vue_static_render_fns__} from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0b7c263a\\\",\\\"hasScoped\\\":false,\\\"optionsId\\\":\\\"0\\\",\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./sl-vue-tree.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nimport normalizeComponent from \"!../node_modules/vue-loader/lib/runtime/component-normalizer\"\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_render__,\n  __vue_static_render_fns__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"src\\\\sl-vue-tree.vue\"\n\n/* hot reload */\nif (module.hot) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-0b7c263a\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-0b7c263a\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nexport default Component.exports\n","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  scriptExports = scriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof scriptExports.default\n  if (type === 'object' || type === 'function') {\n    scriptExports = scriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n"],"sourceRoot":""}